"use strict";var f=Object.defineProperty;var w=Object.getOwnPropertyDescriptor;var G=Object.getOwnPropertyNames;var C=Object.prototype.hasOwnProperty;var q=(a,e)=>{for(var s in e)f(a,s,{get:e[s],enumerable:!0})},L=(a,e,s,t)=>{if(e&&typeof e=="object"||typeof e=="function")for(let n of G(e))!C.call(a,n)&&n!==s&&f(a,n,{get:()=>e[n],enumerable:!(t=w(e,n))||t.enumerable});return a};var Q=a=>L(f({},"__esModule",{value:!0}),a);var _={};q(_,{default:()=>E});module.exports=Q(_);var p=class p{constructor(e,s="en-US"){this.url="https://api.themoviedb.org/3";if(!e)throw new Error("API key is required");this.apiKey=e,this.language=s,this.initialize().catch(t=>{throw console.error("Initialization failed:",t),new Error("Failed to initialize TMDB instance.")})}async initialize(){if(!(await this.validateKey(this.apiKey)).success)throw new Error("Invalid API key")}buildUrl(e){return`${this.url}/${e}`}async delay(e){return new Promise(s=>setTimeout(s,e))}async validateKey(e,s=p.MAX_RETRIES){try{let t={accept:"application/json",Authorization:`Bearer ${e}`},n=await fetch(this.buildUrl("authentication"),{method:"GET",headers:t});if(n.status===429&&s>0)return console.warn(`Rate limit exceeded. Retrying in ${p.RETRY_DELAY}ms...`),await this.delay(p.RETRY_DELAY),this.validateKey(e,s-1);if(!n.ok)throw new Error(`Error: ${n.status} ${n.statusText}`);return await n.json()}catch(t){throw console.error("Failed to fetch:",t),t}}buildQueryParams(e){let s=new URLSearchParams;return s.append("language",e.language||this.language),Object.keys(e).forEach(t=>{t!=="language"&&e[t]!==void 0&&s.append(t,e[t].toString())}),s}async fetchRequest(e,s,t,n=p.MAX_RETRIES){try{let i={accept:"application/json",Authorization:`Bearer ${this.apiKey}`};(s==="POST"||s==="DELETE")&&(i["Content-Type"]="application/json;charset=utf-8");let r=await fetch(this.buildUrl(e),{method:s,headers:i,body:s==="POST"?JSON.stringify(t):void 0});if(r.status===429&&n>0)return console.warn(`Rate limit exceeded. Retrying in ${p.RETRY_DELAY}ms...`),await this.delay(p.RETRY_DELAY),this.fetchRequest(e,s,t,n-1);if(!r.ok)throw new Error(`Error: ${r.status} ${r.statusText}`);return await r.json()}catch(i){throw console.error("Failed to fetch:",i),i}}async GET(e,s=p.MAX_RETRIES){return this.fetchRequest(e,"GET",void 0,s)}async POST(e,s,t=p.MAX_RETRIES){return this.fetchRequest(e,"POST",s,t)}async DELETE(e,s=p.MAX_RETRIES){return this.fetchRequest(e,"DELETE",void 0,s)}};p.MAX_RETRIES=3,p.RETRY_DELAY=1e3;var m=p;var u=class{constructor(e){this.apiInstance=e}async details(e,s){let t=this.apiInstance.buildQueryParams({account_id:e,session_id:s}),n=`account${t.toString()?`?${t.toString()}`:""}`;return this.apiInstance.GET(n)}async addFavorite(e,s,t){let n=`account/${e}/favorite${t?`?session_id=${t}`:""}`;return await this.apiInstance.POST(n,s)}async addToWatchlist(e,s,t){let n=`account/${e}/watchlist${t?`?session_id=${t}`:""}`;return await this.apiInstance.POST(n,s)}async favoriteMovies(e,s,t,n,i){let r=this.apiInstance.buildQueryParams({language:s,page:t,session_id:n,sort_by:i}),c=`account/${e}/favorite/movies${r.toString()?`?${r.toString()}`:""}`;return await this.apiInstance.GET(c)}async favoriteTv(e,s,t,n,i){let r=this.apiInstance.buildQueryParams({language:s,page:t,session_id:n,sort_by:i}),c=`account/${e}/favorite/tv${r.toString()?`?${r.toString()}`:""}`;return await this.apiInstance.GET(c)}async lists(e,s,t){let n=this.apiInstance.buildQueryParams({page:s,session_id:t}),i=`account/${e}/lists${n.toString()?`?${n.toString()}`:""}`;return await this.apiInstance.GET(i)}async ratedMovies(e,s,t,n,i){let r=this.apiInstance.buildQueryParams({language:s,page:t,session_id:n,sort_by:i}),c=`account/${e}/rated/movies${r.toString()?`?${r.toString()}`:""}`;return await this.apiInstance.GET(c)}async ratedTv(e,s,t,n,i){let r=this.apiInstance.buildQueryParams({language:s,page:t,session_id:n,sort_by:i}),c=`account/${e}/rated/tv${r.toString()?`?${r.toString()}`:""}`;return await this.apiInstance.GET(c)}async ratedTvEpisodes(e,s,t,n,i){let r=this.apiInstance.buildQueryParams({language:s,page:t,session_id:n,sort_by:i}),c=`account/${e}/rated/tv/episodes${r.toString()?`?${r.toString()}`:""}`;return await this.apiInstance.GET(c)}async watchlistMovies(e,s,t,n,i){let r=this.apiInstance.buildQueryParams({language:s,page:t,session_id:n,sort_by:i}),c=`account/${e}/watchlist/movies${r.toString()?`?${r.toString()}`:""}`;return await this.apiInstance.GET(c)}async watchlistTv(e,s,t,n,i){let r=this.apiInstance.buildQueryParams({language:s,page:t,session_id:n,sort_by:i}),c=`account/${e}/watchlist/tv${r.toString()?`?${r.toString()}`:""}`;return await this.apiInstance.GET(c)}};var d=class{constructor(e){this.apiInstance=e}async createGuestSession(){return this.apiInstance.POST("authentication/guest_session/new",{})}async createRequestToken(){return this.apiInstance.GET("authentication/token/new")}async createSession(e){return this.apiInstance.POST("authentication/session/new",{request_token:e})}async createSessionFromV4Token(e){return this.apiInstance.POST("authentication/session/convert/4",{access_token:e})}async createSessionWithLogin(e,s,t){return this.apiInstance.POST("authentication/token/validate_with_login",{username:s,password:t,request_token:e})}async deleteSession(e){return this.apiInstance.DELETE(`authentication/session?session_id=${e}`)}async validateKey(){return this.apiInstance.GET("authentication")}};var g=class{constructor(e){this.apiInstance=e}async movieCertifications(){return this.apiInstance.GET("certification/movie/list")}async tvCertifications(){return this.apiInstance.GET("certification/tv/list")}};var l=class{constructor(e){this.apiInstance=e}async movieList(e,s,t){let n=this.apiInstance.buildQueryParams({end_date:e,page:s,start_date:t}),i=`movie/changes${n.toString()?`?${n.toString()}`:""}`;return this.apiInstance.GET(i)}async personList(e,s,t){let n=this.apiInstance.buildQueryParams({end_date:e,page:s,start_date:t}),i=`person/changes${n.toString()?`?${n.toString()}`:""}`;return this.apiInstance.GET(i)}async tvList(e,s,t){let n=this.apiInstance.buildQueryParams({end_date:e,page:s,start_date:t}),i=`tv/changes${n.toString()?`?${n.toString()}`:""}`;return this.apiInstance.GET(i)}};var h=class{constructor(e){this.apiInstance=e}async details(e,s){let t=this.apiInstance.buildQueryParams({language:s}),n=`collection/${e}${t.toString()?`?${t.toString()}`:""}`;return this.apiInstance.GET(n)}async images(e,s,t){let n=this.apiInstance.buildQueryParams({language:s,include_image_language:t}),i=`collection/${e}/images${n.toString()?`?${n.toString()}`:""}`;return this.apiInstance.GET(i)}async translations(e){return this.apiInstance.GET(`collection/${e}/translations`)}};var R=class{constructor(e){this.apiInstance=e}async details(e){return this.apiInstance.GET(`company/${e}`)}async alternativeNames(e){return this.apiInstance.GET(`company/${e}/alternative_names`)}async images(e){return this.apiInstance.GET(`company/${e}/images`)}};var y=class{constructor(e){this.apiInstance=e}async details(){return this.apiInstance.GET("configuration")}async countries(e="en-US"){let s=this.apiInstance.buildQueryParams({language:e}),t=`configuration/countries${s.toString()?`?${s.toString()}`:""}`;return this.apiInstance.GET(t)}async jobs(){return this.apiInstance.GET("configuration/jobs")}async languages(){return this.apiInstance.GET("configuration/languages")}async primaryTranslations(){return this.apiInstance.GET("configuration/primary_translations")}async timezones(){return this.apiInstance.GET("configuration/timezones")}};var P=class{constructor(e){this.apiInstance=e}async details(e,s){let t=this.apiInstance.buildQueryParams({language:s}),n=`credit/${e}${t.toString()?`?${t.toString()}`:""}`;return this.apiInstance.GET(n)}};var v=class{constructor(e){this.apiInstance=e}async movieList(e){let s=this.apiInstance.buildQueryParams({language:e}),t=`genre/movie/list${s.toString()?`?${s.toString()}`:""}`;return this.apiInstance.GET(t)}async tvList(e){let s=this.apiInstance.buildQueryParams({language:e}),t=`genre/tv/list${s.toString()?`?${s.toString()}`:""}`;return this.apiInstance.GET(t)}};var I=class{constructor(e){this.apiInstance=e}async details(e,s){let t=this.apiInstance.buildQueryParams({language:s}),n=`keyword/${e}${t.toString()?`?${t.toString()}`:""}`;return await this.apiInstance.GET(n)}async movies(e,s,t,n=1){let i=this.apiInstance.buildQueryParams({includeAdult:s,language:t,page:n}),r=`keyword/${e}/movies${i.toString()?`?${i.toString()}`:""}`;return await this.apiInstance.GET(r)}};var T=class{constructor(e){this.apiInstance=e}async details(e){return this.apiInstance.GET(`movie/${e}`)}async alternativeTitle(e,s){let t=this.apiInstance.buildQueryParams({country:s}),n=`movie/${e}/alternative_titles${t.toString()?`?${t.toString()}`:""}`;return this.apiInstance.GET(n)}async changes(e,s,t,n=1){let i=this.apiInstance.buildQueryParams({start_date:s,end_date:t,page:n}),r=`movie/${e}/changes${i.toString()?`?${i.toString()}`:""}`;return this.apiInstance.GET(r)}async credits(e,s){let t=this.apiInstance.buildQueryParams({language:s}),n=`movie/${e}/credits${t.toString()?`?${t.toString()}`:""}`;return this.apiInstance.GET(n)}async accountStates(e,s,t){let n=this.apiInstance.buildQueryParams({session_id:s,guest_session_id:t}),i=`movie/${e}/account_states${n.toString()?`?${n.toString()}`:""}`;return this.apiInstance.GET(i)}async externalIds(e){return this.apiInstance.GET(`movie/${e}/external_ids`)}async images(e,s,t){let n=this.apiInstance.buildQueryParams({include_image_language:s,language:t}),i=`movie/${e}/images${n.toString()?`?${n.toString()}`:""}`;return this.apiInstance.GET(i)}async keywords(e){return this.apiInstance.GET(`movie/${e}/keywords`)}async latest(){return this.apiInstance.GET("movie/latest")}async lists(e,s,t){let n=this.apiInstance.buildQueryParams({language:s,page:t}),i=`movie/${e}/lists${n.toString()?`?${n.toString()}`:""}`;return this.apiInstance.GET(i)}async recommendations(e,s,t){let n=this.apiInstance.buildQueryParams({language:s,page:t}),i=`movie/${e}/recommendations${n.toString()?`?${n.toString()}`:""}`;return this.apiInstance.GET(i)}async releaseDates(e){return this.apiInstance.GET(`movie/${e}/release_dates`)}async translations(e){return this.apiInstance.GET(`movie/${e}/translations`)}async videos(e,s){let t=this.apiInstance.buildQueryParams({language:s}),n=`movie/${e}/videos${t.toString()?`?${t.toString()}`:""}`;return this.apiInstance.GET(n)}async watchProviders(e){return this.apiInstance.GET(`movie/${e}/watch/providers`)}};var S=class{constructor(e){this.apiInstance=e}async popular(e,s){let t="/person/popular",n=this.apiInstance.buildQueryParams({language:e,page:s});return await this.apiInstance.GET(`${t}${n.toString()?`?${n.toString()}`:""}`)}};var b=class{constructor(e){this.apiInstance=e}async details(e,s,t){let n=this.apiInstance.buildQueryParams({append_to_response:s,language:t}),i=`tv/${e}${n.toString()?`?${n.toString()}`:""}`;return this.apiInstance.GET(i)}async accountStates(e,s,t){let n=this.apiInstance.buildQueryParams({session_id:s,guest_session_id:t}),i=`tv/${e}/account_states${n.toString()?`?${n.toString()}`:""}`;return this.apiInstance.GET(i)}async aggregateCredits(e,s){let t=this.apiInstance.buildQueryParams({language:s}),n=`tv/${e}/aggregate_credits${t.toString()?`?${t.toString()}`:""}`;return this.apiInstance.GET(n)}async alternativeTitles(e){let s=`tv/${e}/alternative_titles`;return this.apiInstance.GET(s)}async changes(e,s,t,n){let i=this.apiInstance.buildQueryParams({start_date:s,end_date:t,page:n}),r=`tv/${e}/changes${i.toString()?`?${i.toString()}`:""}`;return this.apiInstance.GET(r)}async contentRatings(e){let s=`tv/${e}/content_ratings`;return this.apiInstance.GET(s)}async credits(e,s){let t=this.apiInstance.buildQueryParams({language:s}),n=`tv/${e}/credits${t.toString()?`?${t.toString()}`:""}`;return this.apiInstance.GET(n)}async episodeGroups(e){let s=`tv/${e}/episode_groups`;return this.apiInstance.GET(s)}async externalIds(e){let s=`tv/${e}/external_ids`;return this.apiInstance.GET(s)}async images(e,s,t){let n=this.apiInstance.buildQueryParams({include_image_language:s,language:t}),i=`tv/${e}/images${n.toString()?`?${n.toString()}`:""}`;return this.apiInstance.GET(i)}async keywords(e){let s=`tv/${e}/keywords`;return this.apiInstance.GET(s)}async latest(){return this.apiInstance.GET("tv/latest")}async lists(e,s,t){let n=this.apiInstance.buildQueryParams({language:s,page:t}),i=`tv/${e}/lists${n.toString()?`?${n.toString()}`:""}`;return this.apiInstance.GET(i)}async recommendations(e,s,t){let n=this.apiInstance.buildQueryParams({language:s,page:t}),i=`tv/${e}/recommendations${n.toString()?`?${n.toString()}`:""}`;return this.apiInstance.GET(i)}async reviews(e,s,t){let n=this.apiInstance.buildQueryParams({language:s,page:t}),i=`tv/${e}/reviews${n.toString()?`?${n.toString()}`:""}`;return this.apiInstance.GET(i)}async screenedTheatrically(e){let s=`tv/${e}/screened_theatrically`;return this.apiInstance.GET(s)}async similar(e,s,t){let n=this.apiInstance.buildQueryParams({language:s,page:t}),i=`tv/${e}/similar${n.toString()?`?${n.toString()}`:""}`;return this.apiInstance.GET(i)}async translations(e){let s=`tv/${e}/translations`;return this.apiInstance.GET(s)}async videos(e,s){let t=this.apiInstance.buildQueryParams({language:s}),n=`tv/${e}/videos${t.toString()?`?${t.toString()}`:""}`;return this.apiInstance.GET(n)}async watchProviders(e){let s=`tv/${e}/watch/providers`;return this.apiInstance.GET(s)}async addRating(e,s,t,n){let i=this.apiInstance.buildQueryParams({guest_session_id:t,session_id:n}),r=`tv/${e}/rating${i.toString()?`?${i.toString()}`:""}`;return await this.apiInstance.POST(r,s)}async deleteRating(e,s,t){let n=this.apiInstance.buildQueryParams({guest_session_id:s,session_id:t}),i=`tv/${e}/rating${n.toString()?`?${n.toString()}`:""}`;return await this.apiInstance.DELETE(i)}};var $=class{constructor(e){this.apiInstance=e}async availableRegions(e){let s=this.apiInstance.buildQueryParams({language:e}),t=`watch/providers/regions${s.toString()?`?${s.toString()}`:""}`;return await this.apiInstance.GET(t)}async movieProviders(e,s){let t=this.apiInstance.buildQueryParams({language:e,watch_region:s}),n=`watch/providers/movie${t.toString()?`?${t.toString()}`:""}`;return await this.apiInstance.GET(n)}async tvProviders(e,s){let t=this.apiInstance.buildQueryParams({language:e,watch_region:s}),n=`watch/providers/tv${t.toString()?`?${t.toString()}`:""}`;return await this.apiInstance.GET(n)}};var E=class{constructor(e,s){this.apiInstance=new m(e,s),this.movie=new T(this.apiInstance),this.credits=new P(this.apiInstance),this.genres=new v(this.apiInstance),this.keywords=new I(this.apiInstance),this.peopleLists=new S(this.apiInstance),this.watchProviders=new $(this.apiInstance),this.account=new u(this.apiInstance),this.certifications=new g(this.apiInstance),this.changes=new l(this.apiInstance),this.collections=new h(this.apiInstance),this.authentication=new d(this.apiInstance),this.companies=new R(this.apiInstance),this.configuration=new y(this.apiInstance),this.tvseries=new b(this.apiInstance)}};
